#!/usr/bin/env python

import argparse
from PEETPRMParser import PEETPRMFile
from PEETPicker import get_vector_from_pos_on_average
from Vector import Vector
      
parser = argparse.ArgumentParser(description=('Randomise angles of particles up to given maximum angle.'))
parser.add_argument('prmfile', help='The name of the PEET parameter file (normally ending in .prm) that corresponds to the alignment run you wish to randomise.')
parser.add_argument('iteration', type=int, help='Number value, the iteration to use when getting particles. 0 refers to the initial input files.')
parser.add_argument('max_ang', type=float, help='Number value, the maximum angle difference between original and randomised particles.')
parser.add_argument('outdir', help='Directory to output new motive lists and model files. Automatically creates directory if it does not exist')
parser.add_argument('--no_prm', help='Turn off writing out an accompanying parameter file.', action="store_true")
parser.add_argument('--axis', nargs=3, metavar=('x','y','z'), help='Randomise rotation around one axis only (eg. around y-axis is given as 0 1 0). Default is to rotate particles around randomly defined axes', default=(0,0,0), type=float)


args = parser.parse_args()

writeprm = not args.no_prm
if args.axis == (0,0,0):
    rot_axis=False
else:
    rot_axis=args.axis

inp = PEETPRMFile(args.prmfile)
inp.randomise_pcles(args.iteration, args.max_ang, args.outdir, writeprm=writeprm, axis=rot_axis)
